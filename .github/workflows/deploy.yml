name: Deploy Node.js App to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3Ô∏è‚É£ Cache npm dependencies
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm install --quiet

      # 5Ô∏è‚É£ Build app if build script exists
      - name: Build app
        run: npm run build --if-present

      # 6Ô∏è‚É£ Generate deployment package, exclude large files
      - name: Generate deployment package
        run: |
          zip -r app.zip . \
            -x "*.git*" \
            -x "node_modules/*" \
            -x "app*.zip" \
            -x ".elasticbeanstalk/*"

      # 7Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8Ô∏è‚É£ Get current environment version for rollback
      - name: Get current EB version
        run: |
          CURRENT_VERSION=$(aws elasticbeanstalk describe-environments \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --environment-names ${{ secrets.EB_ENV_NAME }} \
            --query "Environments[0].VersionLabel" --output text)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      # 9Ô∏è‚É£ Generate unique version label
      - name: Generate new version label
        run: |
          VERSION_LABEL="v-$(date +%s)"
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

      # üîü Upload app.zip to S3
      - name: Upload app.zip to S3
        run: |
          aws s3 cp app.zip s3://${{ secrets.AWS_S3_BUCKET }}/app-${{ env.VERSION_LABEL }}.zip

      # 1Ô∏è‚É£1Ô∏è‚É£ Create new EB application version
      - name: Create new EB version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label ${{ env.VERSION_LABEL }} \
            --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET }}",S3Key="app-${{ env.VERSION_LABEL }}.zip"

      # 1Ô∏è‚É£2Ô∏è‚É£ Update EB environment
      - name: Update EB environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label ${{ env.VERSION_LABEL }}

      # 1Ô∏è‚É£3Ô∏è‚É£ Rollback if deploy fails (optional)
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed! Rolling back to $CURRENT_VERSION"
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label "$CURRENT_VERSION"

